{"version":3,"sources":["NavigationBar.js","pages/Login.js","pages/Signup.js","db/db.js","pages/Excercises.sc.js","pages/Exercises.js","pages/upload/Upload.sc.js","pages/upload/Translation.js","pages/upload/Upload.js","components/ImageCard.js","pages/MyImages.js","img/simpsons.small.png","pages/AboutPage.js","routing/RequireAuth.js","pages/Translation.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","navigate","useNavigate","Navbar","bg","expand","Container","Brand","href","style","lineHeight","Toggle","Collapse","id","Nav","className","activeKey","window","location","pathname","Parse","User","current","Link","as","to","onClick","e","preventDefault","logOut","then","Login","props","useState","username","setUsername","password","setPassword","Form","Group","controlId","Label","Control","type","onChange","target","value","placeholder","autoFocus","Button","user","logIn","loggedInUser","variant","SignUp","email","setEmail","a","signUp","alert","message","Translation","Object","extend","query","Query","include","notContainedIn","equalTo","find","get","translation","current_too_easy","push","set","save","uploadImageAndWords","imageFile","translations","Image","newImage","file","File","name","Promise","all","map","newTranslation","from","error","reject","ImageHolder","styled","div","img","WordsHolder","ButtonsHolder","Exercises","setTranslation","showingSolution","setShowingSolution","getRandomTranslation","getTranslationsForExercises","randomWord","Math","floor","random","length","useEffect","alt","src","url","align","tooEasy","console","log","marginRight","NarrowSpace","setFrom","setTo","deleteTranslation","Cloud","run","word_to_translate","result","display","tabIndex","generateUID","Date","now","toString","substring","Upload","setTranslations","setImageFile","newValue","updatedList","t","filter","maxWidth","URL","createObjectURL","files","disabled","ImageCard","imageId","words","Card","Img","ListGroup","ListGroupItem","MyImages","imagesAndTranslations","setImagesAndTranslations","imageId2Url","setImageId2Url","_imagesAndTranslations","_imageId2Url","getTranslations","forEach","imageURL","imageIds","keys","reverse","marginLeft","Row","xs","md","Col","AboutPage","simpsonsImage","width","RequireAuth","translationId","useParams","getTranslation","trans","MyRoutes","path","element","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","serverURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIO,SAASA,IACd,IAAMC,EAAWC,cASjB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,UAAUC,MAAO,CAAEC,WAAY,OAAlD,mBACQ,uBADR,aAIA,cAACP,EAAA,EAAOQ,OAAR,CAAe,gBAAc,qBAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,UAAWC,OAAOC,SAASC,SAApD,WACIC,IAAMC,KAAKC,WACX,qCACE,cAACR,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,qBAGA,cAACX,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,sBAMHL,IAAMC,KAAKC,WACV,qCACE,cAACR,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,YAAvB,sBAIA,cAACX,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,YAAvB,sBAIA,cAACX,EAAA,EAAIS,KAAL,CAAUG,QAtCxB,SAAuBC,GACrBA,EAAEC,iBACFR,IAAMC,KAAKQ,SAASC,MAAK,WACvB7B,EAAS,SAmCmCuB,GAAID,IAAME,GAAG,IAA/C,mC,8BCxCD,SAASM,EAAMC,GAC5B,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMpC,EAAWC,cAajB,OACE,qCACE,uCACA,eAACoC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,SAAU,SAACjB,GAAD,OAAOQ,EAAYR,EAAEkB,OAAOC,QACtCC,YAAY,WACZC,WAAS,OAIb,eAACV,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,SAAU,SAACjB,GAAD,OAAOU,EAAYV,EAAEkB,OAAOC,QACtCC,YAAY,gBAGhB,cAACE,EAAA,EAAD,CAAQvB,QAjCd,SAA4BC,GAC1BA,EAAEC,iBAEF,IAAMsB,EAAO,IAAI9B,IAAMC,KACvB6B,EAAKb,YAAYD,GACjBc,EAAKf,YAAYD,GACjBgB,EAAKC,QAAQrB,MAAK,SAACsB,GACjBnD,EAAS,iBA0B8BoD,QAAQ,UAAUV,KAAK,SAA5D,0B,6BCtCO,SAASW,IACtB,MAAgCrB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KAEMvD,EAAWC,cALc,4CAO/B,4BAAAuD,EAAA,6DACQP,EAAO,IAAI9B,IAAMC,MAClBc,YAAYD,GACjBgB,EAAKb,YAAYD,GACjBc,EAAKM,SAASD,GAJhB,kBAMUL,EAAKQ,SANf,uDAQIC,MAAM,UAAY,KAAMC,SAR5B,QAUE3D,EAAS,aAVX,0DAP+B,sBA+B/B,OACE,qCACE,yCAEA,eAACqC,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,mBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEE,SAlBR,SAAwBjB,GACtBQ,EAAYR,EAAEkB,OAAOC,QAkBfH,KAAK,OACLI,YAAY,iBACZC,WAAS,OAIb,eAACV,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLI,YAAY,WACZH,SA3BR,SAAwBjB,GACtBU,EAAYV,EAAEkB,OAAOC,aA8BnB,eAACR,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,iBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACEE,SA9BR,SAAqBjB,GACnB6B,EAAS7B,EAAEkB,OAAOC,QA8BZH,KAAK,QACLI,YAAY,mBAIhB,cAACE,EAAA,EAAD,CAAQI,QAAQ,UAAU3B,QA/DC,2CA+D3B,+B,4CClEN,8BAAA+B,EAAA,6DACQI,EAAczC,IAAM0C,OAAOC,OAAO,gBAClCC,EAAQ,IAAI5C,IAAM6C,MAAMJ,IACxBK,QAAQ,SACdF,EAAMG,eAAe,WAAY,CAAC9C,OAAKC,YACvC0C,EAAMI,QAAQ,OAAQhD,IAAMC,KAAKC,WALnC,SAOe0C,EAAMK,OAPrB,oF,kEAUA,WAA8BxD,GAA9B,iBAAA4C,EAAA,6DACQI,EAAczC,IAAM0C,OAAOC,OAAO,gBAClCC,EAAQ,IAAI5C,IAAM6C,MAAMJ,IACxBK,QAAQ,SAHhB,SAKeF,EAAMM,IAAIzD,GALzB,oF,kEAQA,8BAAA4C,EAAA,6DACQI,EAAczC,IAAM0C,OAAOC,OAAO,gBAClCC,EAAQ,IAAI5C,IAAM6C,MAAMJ,IACxBK,QAAQ,SAEdF,EAAMG,eAAe,WAAY,CAAC9C,OAAKC,YALzC,SAOe0C,EAAMK,OAPrB,oF,kEAUA,WAAuBE,GAAvB,eAAAd,EAAA,uDACQe,EAAmBD,EAAYD,IAAI,aAAe,IACvCG,KAAKpD,OAAKC,WAC3BiD,EAAYG,IAAI,WAAYF,GAC5BD,EAAYI,OAJd,4C,+BAOeC,E,gFAAf,WAAmCC,EAAWC,GAA9C,mBAAArB,EAAA,6DACQsB,EAAQ3D,IAAM0C,OAAOC,OAAO,SAC5BiB,EAAW,IAAID,EAEfE,EAAO,IAAI7D,IAAM8D,KAAKL,EAAUM,KAAMN,GAC5CG,EAASN,IAAI,OAAQO,GALvB,SAOeG,QAAQC,IACnBP,EAAaQ,KAAI,SAACf,GAChB,IACMgB,EAAiB,IADHnE,IAAM0C,OAAOC,OAAO,gBAExCwB,EAAeb,IAAI,OAAQH,EAAYiB,MACvCD,EAAeb,IAAI,KAAMH,EAAY9C,IACrC8D,EAAeb,IAAI,OAAQtD,IAAMC,KAAKC,WACtCiE,EAAeb,IAAI,QAASM,GAE5B,IACE,OAAOO,EAAeZ,OACtB,MAAOc,GAEP,OADA9B,MAAM8B,GACCL,QAAQM,OAAO,6BApB9B,oF,oDCnCMC,EAAcC,IAAOC,IAAV,8FAMXd,EAAQa,IAAOE,IAAV,wHAOLC,EAAcH,IAAOC,IAAV,wHAOXG,EAAgBJ,IAAOC,IAAV,8FCfZ,SAASI,IACd,MAAsChE,qBAAtC,mBAAOsC,EAAP,KAAoB2B,EAApB,KACA,EAA8CjE,oBAAS,GAAvD,mBAAOkE,EAAP,KAAwBC,EAAxB,KAMA,SAASC,IACPH,I,0CACAI,GAA8BxE,MAAK,SAACgD,GAClC,IAAMyB,EACJzB,EAAa0B,KAAKC,MAAMD,KAAKE,SAAW5B,EAAa6B,SACvDT,EAAeK,MAkBnB,OA3BAK,qBAAU,WACRP,MACC,IAyBE9B,EAKH,qCACE,cAAC,EAAD,UACE,cAAC,EAAD,CAASsC,IAAI,GAAGC,IAAKvC,EAAYD,IAAI,SAASA,IAAI,QAAQyC,UAG5D,cAAC,EAAD,UACE,8BAAIxC,EAAYD,IAAI,QAApB,SAEF,cAAC,EAAD,UACG6B,EAAkB5B,EAAYD,IAAI,MAAQ,MAG7C,cAAC,EAAD,UACG6B,EACC,mCACE,cAAClD,EAAA,EAAD,CAAQvB,QAzBlB,WACE0E,GAAmB,GACnBC,KAuBQ,oBAGF,sBAAK5F,MAAO,CAAEuG,MAAO,UAArB,UACE,cAAC/D,EAAA,EAAD,CAAQvB,QAtClB,Y,4CACEuF,CAAQ1C,GAAazC,MAAK,WACxBoF,QAAQC,IAAI,SAEZd,QAkCsChD,QAAQ,YAAxC,sBADF,eAKE,cAACJ,EAAA,EAAD,CACExC,MAAO,CAAE2G,YAAa,KACtB1F,QAAS,kBAAM0E,GAAmB,IAFpC,mCA3BD,sB,eCrCLiB,EAAczB,IAAOC,IAAV,2CCEF,SAAShC,EAAT,GAKX,IAJFU,EAIC,EAJDA,YACA+C,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,kBACC,4CACD,WAAoC7F,GAApC,eAAA8B,EAAA,6DACE9B,EAAEC,iBADJ,SAGqBR,IAAMqG,MAAMC,IAAI,mBAAoB,CACrDC,kBAAmBpD,EAAYiB,OAJnC,OAGMoC,EAHN,OAMEL,EAAMhD,EAAaqD,GANrB,4CADC,sBASD,OACE,mCACE,sBAAKnH,MAAO,CAAEoH,QAAS,QAAvB,UACE,eAACvF,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CACEM,WAAS,EACTF,MAAOyB,EAAYiB,KACnB7C,KAAK,OACLC,SAAU,SAACjB,GAAD,OAAO2F,EAAQ/C,EAAa5C,EAAEkB,OAAOC,aAInD,cAACuE,EAAD,IAEA,eAAC/E,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,uBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,mBAAGjC,KAAK,IAAIkB,QA1BnB,4CA0BO,oBAGA,cAACY,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLG,MAAOyB,EAAY9C,GACnBmB,SAAU,SAACjB,GAAD,OAAO4F,EAAMhD,EAAa5C,EAAEkB,OAAOC,aAIjD,cAACG,EAAA,EAAD,CACE6E,SAAS,KACTpG,QAAS,SAACC,GAAD,OAAO6F,EAAkBjD,IAClClB,QAAQ,OAHV,oBCtCR,SAAS0E,IACP,OAAOC,KAAKC,MAAMC,SAAS,IAAM1B,KAAKE,SAASwB,SAAS,IAAIC,UAAU,GAGjE,SAASC,IACd,MAAwCnG,mBAAS,CAC/C,CAAEpB,GAAIkH,IAAetG,GAAI,GAAI+D,KAAM,MADrC,mBAAOV,EAAP,KAAqBuD,EAArB,KAGA,EAAkCpG,qBAAlC,mBAAO4C,EAAP,KAAkByD,EAAlB,KACMrI,EAAWC,cALM,4CAOvB,WAA4ByB,GAA5B,SAAA8B,EAAA,6DACE9B,EAAEC,iBADJ,SAGQgD,EAAoBC,EAAWC,GAHvC,OAKE7E,EAAS,aALX,4CAPuB,sBAuBvB,SAASqH,EAAQ/C,EAAagE,GAC5B,IAAMC,EAAc1D,EAAaQ,KAAI,SAACmD,GAAD,OACnCA,EAAE5H,KAAO0D,EAAY1D,GACjB4H,EACA,CAAE5H,GAAI0D,EAAY1D,GAAI2E,KAAM+C,EAAU9G,GAAI8C,EAAY9C,OAG5D4G,EAAgBG,GAGlB,SAASjB,EAAMhD,EAAagE,GAC1B,IAAMC,EAAc1D,EAAaQ,KAAI,SAACmD,GAAD,OACnCA,EAAE5H,KAAO0D,EAAY1D,GACjB4H,EACA,CAAE5H,GAAI0D,EAAY1D,GAAI2E,KAAMjB,EAAYiB,KAAM/D,GAAI8G,MAExDF,EAAgBG,GAGlB,SAAShB,EAAkBjD,GACzB8D,EAAgBvD,EAAa4D,QAAO,SAACD,GAAD,OAAOA,EAAE5H,KAAO0D,EAAY1D,OAGlE,OACE,qCACGgE,GACC,qBACEgC,IAAI,GACJpG,MAAO,CAAEkI,SAAU,SACnB7B,IAAK8B,IAAIC,gBAAgBhE,KAI7B,eAACvC,EAAA,EAAD,YACIuC,GACA,eAACvC,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWzB,UAAU,OAA3C,UACE,cAACuB,EAAA,EAAKG,MAAN,iDACA,cAACH,EAAA,EAAKI,QAAN,CAAcE,SA7CxB,SAA0BjB,GACxB2G,EAAa3G,EAAEkB,OAAOiG,MAAM,KA4CsBnG,KAAK,YAGlDkC,GACC,cAAC5B,EAAA,EAAD,CAAQI,QAAQ,OAAO3B,QAAS,kBAAM4G,KAAtC,kCAKDxD,EAAaQ,KAAI,SAACf,GAAD,OAChB,cAAC,EAAD,CAEEA,YAAaA,EACb+C,QAASA,EACTC,MAAOA,EACPC,kBAAmBA,GAJdjD,EAAY1D,OAQrB,cAACoC,EAAA,EAAD,CAAQvB,QA5Dd,WACE2G,EAAgB,GAAD,mBAAKvD,GAAL,CAAmB,CAAEjE,GAAIkH,IAAetG,GAAI,GAAI+D,KAAM,QA2D7BnC,QAAQ,QAA5C,iCAGA,uBACA,uBAEA,cAACJ,EAAA,EAAD,CACEvB,QAtFe,4CAuFfqH,UAAWlE,EACXxB,QAAQ,UACRV,KAAK,SAJP,0B,iDC9FO,SAASqG,EAAT,GAA4C,EAAvBC,QAAwB,IAAflC,EAAc,EAAdA,IAAKmC,EAAS,EAATA,MAChD,OACE,qCACE,uBAEA,eAACC,EAAA,EAAD,CAAM1I,MAAO,CAAEkI,SAAU,SAAzB,UACE,cAACQ,EAAA,EAAKC,IAAN,CAAU/F,QAAQ,MAAMyD,IAAKC,IAE7B,cAACsC,EAAA,EAAD,CAAWtI,UAAU,mBAArB,SACGmI,EAAM5D,KAAI,SAAC3D,GAAD,OACT,cAAC2H,EAAA,EAAD,UACE,cAAC,IAAD,CAAM7H,GAAI,gBAAkBE,EAAEd,GAA9B,SACE,4BAAIc,EAAE2C,IAAI,aAFM3C,EAAEd,eCL3B,SAAS0I,IACd,MAA0DtH,qBAA1D,mBAAOuH,EAAP,KAA8BC,EAA9B,KACA,EAAsCxH,qBAAtC,mBAAOyH,EAAP,KAAoBC,EAApB,KAwBA,GAtBA/C,qBAAU,WACR,IAAMgD,EAAyB,GACzBC,EAAe,I,2CAErBC,GAAkBhI,MAAK,SAACgD,GACtBA,EAAaiF,SAAQ,SAACtB,GACpB,IAAMQ,EAAUR,EAAEnE,IAAI,SAASzD,GACzBmJ,EAAWvB,EAAEnE,IAAI,SAASA,IAAI,QAAQyC,MAEvC6C,EAAuBX,KAC1BW,EAAuBX,GAAW,GAClCY,EAAaZ,GAAWe,GAG1BJ,EAAuBX,GAASxE,KAAKgE,MAGvCgB,EAAyBG,GACzBD,EAAeE,QAEhB,KAEEL,IAA0BE,EAC7B,MAAO,aAGT,IAAMO,EAAWnG,OAAOoG,KAAKV,GAG7B,OAFAS,EAASE,UAGP,qCACE,qBAAK1J,MAAO,CAAEoH,QAAS,QAAvB,SACE,cAAC,IAAD,CAAMpG,GAAG,UAAT,SACE,cAACwB,EAAA,EAAD,CAAQxC,MAAO,CAAE2J,WAAY,QAA7B,kCAIJ,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACGN,EAAS3E,KAAI,SAAC2D,GAAD,OACZ,cAACuB,EAAA,EAAD,UACE,cAACxB,EAAD,CACEC,QAASA,EACTlC,IAAK2C,EAAYT,GACjBC,MAAOM,EAAsBP,MAJvBA,WClDL,WAA0B,2CCE1B,SAASwB,KACtB,OACE,qCACE,qBAAK5D,IAAI,WAAWC,IAAK4D,GAAeC,MAAM,SAC9C,uBACA,uBACA,0JAKA,+RAOA,uBAEA,mBAAGnK,KAAK,WAAR,SACE,2DClBO,SAASoK,KACtB,OAAKvJ,OAAKC,UAKH,cAAC,IAAD,IAHE,cAAC,IAAD,CAAUG,GAAG,WCEjB,SAASoC,KACd,IACIgH,EADSC,cACcD,cAE3B,EAAsC5I,qBAAtC,mBAAOsC,EAAP,KAAoB2B,EAApB,KACA,EAA8CjE,oBAAS,GAAvD,mBAAOkE,EAAP,KAAwBC,EAAxB,KAQA,OANAQ,qBAAU,Y,4CACRmE,CAAeF,GAAe/I,MAAK,SAACkJ,GAClC9E,EAAe8E,QAEhB,IAEEzG,EAKH,qCACE,cAAC,EAAD,UACE,cAAC,EAAD,CAASsC,IAAI,GAAGC,IAAKvC,EAAYD,IAAI,SAASA,IAAI,QAAQyC,UAG5D,cAAC,EAAD,UACE,8BAAIxC,EAAYD,IAAI,QAApB,SAEF,cAAC,EAAD,UACG6B,EAAkB5B,EAAYD,IAAI,MAAQ,MAG7C,cAAC,EAAD,UACI6B,EAUA,cAAC,IAAD,CAAM1E,GAAG,YAAT,SACE,cAACwB,EAAA,EAAD,kCAVF,qBAAKxC,MAAO,CAAEuG,MAAO,UAArB,SACE,cAAC/D,EAAA,EAAD,CACExC,MAAO,CAAE2G,YAAa,KACtB1F,QAAS,kBAAM0E,GAAmB,IAFpC,qCAnBD,sBCdI,SAAS6E,KACtB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAACpJ,EAAD,MAC9B,cAAC,IAAD,CAAOmJ,KAAK,SAASC,QAAS,cAACV,GAAD,MAE9B,eAAC,IAAD,CAAOU,QAAS,cAACP,GAAD,IAAhB,UACE,cAAC,IAAD,CAAOM,KAAK,YAAYC,QAAS,cAAClF,EAAD,MACjC,cAAC,IAAD,CAAOiF,KAAK,8BAA8BC,QAAS,cAAC,GAAD,MACnD,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC/C,EAAD,MAC/B,cAAC,IAAD,CAAO8C,KAAK,YAAYC,QAAS,cAAC5B,EAAD,SAGnC,cAAC,IAAD,CAAO2B,KAAK,IAAIC,QAAS,cAACV,GAAD,WCRlBW,OAXf,WACE,OACE,qBAAKrK,UAAU,MAAf,SACE,eAAC,IAAD,CAAYsK,SAAS,IAArB,UACE,cAACrL,EAAD,IACA,cAACiL,GAAD,UCCOK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1J,MAAK,YAAkD,IAA/C2J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdnK,IAAM0K,WACJ,2CACA,4CAGF1K,IAAM2K,UAAY,iCAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.07452e50.chunk.js","sourcesContent":["import { Navbar, Container, Nav } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nexport function NavigationBar() {\n  const navigate = useNavigate();\n\n  function handleSignOut(e) {\n    e.preventDefault();\n    Parse.User.logOut().then(() => {\n      navigate(\"/\");\n    });\n  }\n\n  return (\n    <Navbar bg=\"light\" expand=\"sm\">\n      <Container>\n        <Navbar.Brand href=\"#/about\" style={{ lineHeight: \"1em\" }}>\n          Dansk <br />\n          in Town\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\" activeKey={window.location.pathname}>\n            {!Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/signup\">\n                  Sign Up\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/login\">\n                  LogIn\n                </Nav.Link>\n              </>\n            )}\n\n            {Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/myimages\">\n                  My Words\n                </Nav.Link>\n\n                <Nav.Link as={Link} to=\"/exercise\">\n                  Practice\n                </Nav.Link>\n\n                <Nav.Link onClick={handleSignOut} as={Link} to=\"/\">\n                  Sign Out\n                </Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Login(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n\n  function handleLoginAttempt(e) {\n    e.preventDefault();\n\n    const user = new Parse.User();\n    user.setPassword(password);\n    user.setUsername(username);\n    user.logIn().then((loggedInUser) => {\n      navigate(\"/exercise\");\n    });\n  }\n\n  return (\n    <>\n      <h1>Login</h1>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Username\"\n            autoFocus\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button onClick={handleLoginAttempt} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  async function createAccount() {\n    const user = new Parse.User();\n    user.setUsername(username);\n    user.setPassword(password);\n    user.setEmail(email);\n    try {\n      await user.signUp();\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    }\n    navigate(\"/exercise\");\n  }\n\n  function usernameChange(e) {\n    setUsername(e.target.value);\n  }\n  function passwordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function emailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicUsrname\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          onChange={usernameChange}\n          type=\"text\"\n          placeholder=\"Enter username\"\n          autoFocus\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={passwordChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          onChange={emailChange}\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" onClick={createAccount}>\n        Create Account\n      </Button>\n    </>\n  );\n}\n","import Parse, { User } from \"parse\";\n\nasync function getTranslations() {\n  const Translation = Parse.Object.extend(\"Translation\");\n  const query = new Parse.Query(Translation);\n  query.include(\"image\");\n  query.notContainedIn(\"too_easy\", [User.current()]);\n  query.equalTo(\"user\", Parse.User.current());\n\n  return await query.find();\n}\n\nasync function getTranslation(id) {\n  const Translation = Parse.Object.extend(\"Translation\");\n  const query = new Parse.Query(Translation);\n  query.include(\"image\");\n\n  return await query.get(id);\n}\n\nasync function getTranslationsForExercises() {\n  const Translation = Parse.Object.extend(\"Translation\");\n  const query = new Parse.Query(Translation);\n  query.include(\"image\");\n\n  query.notContainedIn(\"too_easy\", [User.current()]);\n\n  return await query.find();\n}\n\nasync function tooEasy(translation) {\n  const current_too_easy = translation.get(\"too_easy\") || [];\n  current_too_easy.push(User.current());\n  translation.set(\"too_easy\", current_too_easy);\n  translation.save();\n}\n\nasync function uploadImageAndWords(imageFile, translations) {\n  const Image = Parse.Object.extend(\"Image\");\n  const newImage = new Image();\n\n  const file = new Parse.File(imageFile.name, imageFile);\n  newImage.set(\"file\", file);\n\n  return await Promise.all(\n    translations.map((translation) => {\n      const Translation = Parse.Object.extend(\"Translation\");\n      const newTranslation = new Translation();\n      newTranslation.set(\"from\", translation.from);\n      newTranslation.set(\"to\", translation.to);\n      newTranslation.set(\"user\", Parse.User.current());\n      newTranslation.set(\"image\", newImage);\n\n      try {\n        return newTranslation.save();\n      } catch (error) {\n        alert(error);\n        return Promise.reject(\"something went wrong\");\n      }\n    })\n  );\n}\n\nexport {\n  getTranslations,\n  uploadImageAndWords,\n  tooEasy,\n  getTranslationsForExercises,\n  getTranslation,\n};\n","import styled from \"styled-components\";\n\nconst ImageHolder = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 320px;\n  border: 1px solid gray;\n  margin-bottom: 1em;\n`;\n\nconst WordsHolder = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: xx-large;\n  margin-top: 0.2em;\n`;\n\nconst ButtonsHolder = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n`;\n\nexport { ImageHolder, Image, WordsHolder, ButtonsHolder };\n","import { useEffect, useState } from \"react\";\n\nimport { getTranslationsForExercises, tooEasy } from \"../db/db\";\n\nimport { Button } from \"react-bootstrap\";\nimport * as s from \"./Excercises.sc\";\n\nexport function Exercises() {\n  const [translation, setTranslation] = useState();\n  const [showingSolution, setShowingSolution] = useState(false);\n\n  useEffect(() => {\n    getRandomTranslation();\n  }, []);\n\n  function getRandomTranslation() {\n    setTranslation();\n    getTranslationsForExercises().then((translations) => {\n      const randomWord =\n        translations[Math.floor(Math.random() * translations.length)];\n      setTranslation(randomWord);\n    });\n  }\n\n  function handleTooEasy() {\n    tooEasy(translation).then(() => {\n      console.log(\"saved\");\n\n      getRandomTranslation();\n      // window.location.reload(false);\n    });\n  }\n\n  function handleNext() {\n    setShowingSolution(false);\n    getRandomTranslation();\n  }\n\n  if (!translation) {\n    return <p></p>;\n  }\n\n  return (\n    <>\n      <s.ImageHolder>\n        <s.Image alt=\"\" src={translation.get(\"image\").get(\"file\").url()} />\n      </s.ImageHolder>\n\n      <s.WordsHolder>\n        <b>{translation.get(\"from\")} </b>\n      </s.WordsHolder>\n      <s.WordsHolder>\n        {showingSolution ? translation.get(\"to\") : \"?\"}\n      </s.WordsHolder>\n\n      <s.ButtonsHolder>\n        {showingSolution ? (\n          <>\n            <Button onClick={handleNext}>Next</Button>\n          </>\n        ) : (\n          <div style={{ align: \"center\" }}>\n            <Button onClick={handleTooEasy} variant=\"secondary\">\n              Too Easy\n            </Button>\n            &nbsp;&nbsp;&nbsp;\n            <Button\n              style={{ marginRight: \"0\" }}\n              onClick={() => setShowingSolution(true)}\n            >\n              Show Solution\n            </Button>\n          </div>\n        )}\n      </s.ButtonsHolder>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst NarrowSpace = styled.div`\n  width: 1em;\n`;\n\nexport { NarrowSpace };\n","import { Form, Button } from \"react-bootstrap\";\nimport { NarrowSpace } from \"./Upload.sc\";\nimport Parse from \"parse\";\n\nexport default function Translation({\n  translation,\n  setFrom,\n  setTo,\n  deleteTranslation,\n}) {\n  async function automaticTranslation(e) {\n    e.preventDefault();\n\n    let result = await Parse.Cloud.run(\"google_translate\", {\n      word_to_translate: translation.from,\n    });\n    setTo(translation, result);\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Word</Form.Label>\n          <Form.Control\n            autoFocus\n            value={translation.from}\n            type=\"text\"\n            onChange={(e) => setFrom(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <NarrowSpace />\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicTranslation\">\n          <Form.Label>Translation</Form.Label>\n          <a href=\"/\" onClick={automaticTranslation}>\n            (auto)\n          </a>\n          <Form.Control\n            type=\"text\"\n            value={translation.to}\n            onChange={(e) => setTo(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          tabIndex=\"-1\"\n          onClick={(e) => deleteTranslation(translation)}\n          variant=\"link\"\n        >\n          x\n        </Button>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router\";\n\nimport Translation from \"./Translation\";\nimport { uploadImageAndWords } from \"../../db/db\";\n\nfunction generateUID() {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n\nexport function Upload() {\n  const [translations, setTranslations] = useState([\n    { id: generateUID(), to: \"\", from: \"\" },\n  ]);\n  const [imageFile, setImageFile] = useState();\n  const navigate = useNavigate();\n\n  async function handleUpload(e) {\n    e.preventDefault();\n\n    await uploadImageAndWords(imageFile, translations);\n\n    navigate(\"/myimages\");\n  }\n\n  function handleFileUpload(e) {\n    setImageFile(e.target.files[0]);\n  }\n\n  function addNewTranslation() {\n    setTranslations([...translations, { id: generateUID(), to: \"\", from: \"\" }]);\n  }\n\n  function setFrom(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id !== translation.id\n        ? t\n        : { id: translation.id, from: newValue, to: translation.to }\n    );\n\n    setTranslations(updatedList);\n  }\n\n  function setTo(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id !== translation.id\n        ? t\n        : { id: translation.id, from: translation.from, to: newValue }\n    );\n    setTranslations(updatedList);\n  }\n\n  function deleteTranslation(translation) {\n    setTranslations(translations.filter((t) => t.id !== translation.id));\n  }\n\n  return (\n    <>\n      {imageFile && (\n        <img\n          alt=\"\"\n          style={{ maxWidth: \"400px\" }}\n          src={URL.createObjectURL(imageFile)}\n        />\n      )}\n\n      <Form>\n        {!imageFile && (\n          <Form.Group controlId=\"formFile\" className=\"mb-3\">\n            <Form.Label>Select an image from your computer</Form.Label>\n            <Form.Control onChange={handleFileUpload} type=\"file\" />\n          </Form.Group>\n        )}\n        {imageFile && (\n          <Button variant=\"link\" onClick={() => setImageFile()}>\n            Select another image\n          </Button>\n        )}\n\n        {translations.map((translation) => (\n          <Translation\n            key={translation.id}\n            translation={translation}\n            setFrom={setFrom}\n            setTo={setTo}\n            deleteTranslation={deleteTranslation}\n          />\n        ))}\n\n        <Button onClick={addNewTranslation} variant=\"light\">\n          Add new translation\n        </Button>\n        <br />\n        <br />\n\n        <Button\n          onClick={handleUpload}\n          disabled={!imageFile}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nexport default function ImageCard({ imageId, url, words }) {\n  return (\n    <>\n      <br />\n\n      <Card style={{ maxWidth: \"320px\" }}>\n        <Card.Img variant=\"top\" src={url} />\n\n        <ListGroup className=\"list-group-flush\">\n          {words.map((e) => (\n            <ListGroupItem key={e.id}>\n              <Link to={\"/translation/\" + e.id}>\n                <b>{e.get(\"from\")}</b>\n              </Link>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Card>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getTranslations } from \"../db/db.js\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport ImageCard from \"../components/ImageCard\";\n\nexport function MyImages() {\n  const [imagesAndTranslations, setImagesAndTranslations] = useState();\n  const [imageId2Url, setImageId2Url] = useState();\n\n  useEffect(() => {\n    const _imagesAndTranslations = {};\n    const _imageId2Url = {};\n\n    getTranslations().then((translations) => {\n      translations.forEach((t) => {\n        const imageId = t.get(\"image\").id;\n        const imageURL = t.get(\"image\").get(\"file\").url();\n\n        if (!_imagesAndTranslations[imageId]) {\n          _imagesAndTranslations[imageId] = [];\n          _imageId2Url[imageId] = imageURL;\n        }\n\n        _imagesAndTranslations[imageId].push(t);\n      });\n\n      setImagesAndTranslations(_imagesAndTranslations);\n      setImageId2Url(_imageId2Url);\n    });\n  }, []);\n\n  if (!imagesAndTranslations || !imageId2Url) {\n    return \"Loading...\";\n  }\n\n  const imageIds = Object.keys(imagesAndTranslations);\n  imageIds.reverse();\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Link to=\"/upload\">\n          <Button style={{ marginLeft: \"auto\" }}>Upload New Image</Button>\n        </Link>\n      </div>\n\n      <Row xs={1} md={2}>\n        {imageIds.map((imageId) => (\n          <Col key={imageId}>\n            <ImageCard\n              imageId={imageId}\n              url={imageId2Url[imageId]}\n              words={imagesAndTranslations[imageId]}\n            />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/simpsons.small.ad336b70.png\";","import simpsonsImage from \"../img/simpsons.small.png\";\n\nexport default function AboutPage() {\n  return (\n    <>\n      <img alt=\"simpsons\" src={simpsonsImage} width=\"100%\" />\n      <br />\n      <br />\n      <p>\n        Do you live in Denmark? Wouldn't it be nice if you would understand at\n        least the danish on the signs you see around town?\n      </p>\n\n      <p>\n        Practice Danish vocabulary based on photos taken around town. Either use\n        the public photo set that we created by walking everywhere around town,\n        or upload and practice with your own photos. Tip: When uploading your\n        own you get automatic translations too!\n      </p>\n\n      <br />\n\n      <a href=\"#/signup\">\n        <h4>Become a Beta-tester</h4>\n      </a>\n    </>\n  );\n}\n","import { User } from \"parse\";\nimport { Navigate, Outlet } from \"react-router\";\n\n// based on: https://stackoverflow.com/a/69592617/1200070\n\nexport default function RequireAuth() {\n  if (!User.current()) {\n    // Redirect to the /login page,\n    return <Navigate to=\"/login\" />;\n  }\n\n  return <Outlet />;\n}\n","import { useEffect, useState } from \"react\";\n\nimport { Button } from \"react-bootstrap\";\nimport * as s from \"./Excercises.sc\";\n\nimport { useParams } from \"react-router\";\nimport { getTranslation } from \"../db/db\";\n\nimport { Link } from \"react-router-dom\";\n\nexport function Translation() {\n  let params = useParams();\n  let translationId = params.translationId;\n\n  const [translation, setTranslation] = useState();\n  const [showingSolution, setShowingSolution] = useState(false);\n\n  useEffect(() => {\n    getTranslation(translationId).then((trans) => {\n      setTranslation(trans);\n    });\n  }, []);\n\n  if (!translation) {\n    return <p></p>;\n  }\n\n  return (\n    <>\n      <s.ImageHolder>\n        <s.Image alt=\"\" src={translation.get(\"image\").get(\"file\").url()} />\n      </s.ImageHolder>\n\n      <s.WordsHolder>\n        <b>{translation.get(\"from\")} </b>\n      </s.WordsHolder>\n      <s.WordsHolder>\n        {showingSolution ? translation.get(\"to\") : \"?\"}\n      </s.WordsHolder>\n\n      <s.ButtonsHolder>\n        {!showingSolution ? (\n          <div style={{ align: \"center\" }}>\n            <Button\n              style={{ marginRight: \"0\" }}\n              onClick={() => setShowingSolution(true)}\n            >\n              Show Translation\n            </Button>\n          </div>\n        ) : (\n          <Link to=\"/myimages\">\n            <Button>Back to My Images</Button>\n          </Link>\n        )}\n      </s.ButtonsHolder>\n    </>\n  );\n}\n","import { Routes, Route } from \"react-router-dom\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport { Exercises } from \"../pages/Exercises\";\nimport { Upload } from \"../pages/upload/Upload\";\nimport { MyImages } from \"../pages/MyImages\";\nimport AboutPage from \"../pages/AboutPage\";\nimport RequireAuth from \"./RequireAuth\";\nimport { Translation } from \"../pages/Translation\";\n\nexport default function MyRoutes() {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/about\" element={<AboutPage />} />\n\n        <Route element={<RequireAuth />}>\n          <Route path=\"/exercise\" element={<Exercises />} />\n          <Route path=\"/translation/:translationId\" element={<Translation />} />\n          <Route path=\"/upload\" element={<Upload />} />\n          <Route path=\"/myimages\" element={<MyImages />} />\n        </Route>\n\n        <Route path=\"/\" element={<AboutPage />} />\n      </Routes>\n    </>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport MyRoutes from \"./routing/Routes\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <NavigationBar />\n        <MyRoutes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./App.css\";\n\nimport Parse from \"parse\";\n\nParse.initialize(\n  \"KLxcuhhjrb2JQwegqs5jto882HLxv7scW89HDACX\",\n  \"hfYT45KTgwRr4JBWGQFaCSokz7URgAPiyoTRlqxT\"\n);\n\nParse.serverURL = \"https://parseapi.back4app.com/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}