{"version":3,"sources":["NavigationBar.js","pages/Login.js","pages/Signup.js","db/db.js","pages/Excercises.sc.js","pages/Exercises.js","pages/upload/Upload.sc.js","pages/upload/Translation.js","pages/upload/Upload.js","components/ImageCard.js","pages/MyImages.js","img/simpsons.png","pages/AboutPage.js","routing/RequireAuth.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","navigate","useNavigate","Navbar","bg","expand","Container","Brand","href","style","lineHeight","Toggle","Collapse","id","Nav","className","activeKey","window","location","pathname","Parse","User","current","Link","as","to","onClick","e","preventDefault","logOut","then","Login","props","useState","username","setUsername","password","setPassword","Form","Group","controlId","Label","Control","type","onChange","target","value","placeholder","autoFocus","Button","user","logIn","loggedInUser","variant","SignUp","email","setEmail","a","signUp","alert","message","getTranslations","Translation","Object","extend","query","Query","include","find","uploadImageAndWords","imageFile","translations","Image","newImage","file","File","name","set","Promise","all","map","translation","newTranslation","from","save","error","reject","ImageHolder","styled","div","img","WordsHolder","ButtonsHolder","Exercises","setTranslation","showingSolution","setShowingSolution","useEffect","randomWord","Math","floor","random","length","alt","src","get","url","reload","align","marginRight","NarrowSpace","setFrom","setTo","deleteTranslation","Cloud","run","word_to_translate","result","display","tabIndex","generateUID","Date","now","toString","substring","Upload","setTranslations","setImageFile","newValue","updatedList","t","filter","maxWidth","URL","createObjectURL","files","disabled","ImageCard","imageId","words","Card","Img","ListGroup","ListGroupItem","MyImages","imagesAndTranslations","setImagesAndTranslations","imageId2Url","setImageId2Url","_imagesAndTranslations","_imageId2Url","forEach","imageURL","push","imageIds","keys","reverse","marginLeft","Row","xs","md","Col","AboutPage","simpsonsImage","width","RequireAuth","MyRoutes","path","element","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","serverURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAIO,SAASA,IACd,IAAMC,EAAWC,cASjB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,UAAUC,MAAO,CAAEC,WAAY,OAAlD,mBACQ,uBADR,aAIA,cAACP,EAAA,EAAOQ,OAAR,CAAe,gBAAc,qBAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,UAAWC,OAAOC,SAASC,SAApD,WACIC,IAAMC,KAAKC,WACX,qCACE,cAACR,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,qBAGA,cAACX,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,sBAMHL,IAAMC,KAAKC,WACV,qCACE,cAACR,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,YAAvB,uBAIA,cAACX,EAAA,EAAIS,KAAL,CAAUC,GAAID,IAAME,GAAG,YAAvB,sBAIA,cAACX,EAAA,EAAIS,KAAL,CAAUG,QAtCxB,SAAuBC,GACrBA,EAAEC,iBACFR,IAAMC,KAAKQ,SAASC,MAAK,WACvB7B,EAAS,SAmCmCuB,GAAID,IAAME,GAAG,IAA/C,mC,8BCxCD,SAASM,EAAMC,GAC5B,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMpC,EAAWC,cAajB,OACE,qCACE,uCACA,eAACoC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,SAAU,SAACjB,GAAD,OAAOQ,EAAYR,EAAEkB,OAAOC,QACtCC,YAAY,WACZC,WAAS,OAIb,eAACV,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,SAAU,SAACjB,GAAD,OAAOU,EAAYV,EAAEkB,OAAOC,QACtCC,YAAY,gBAGhB,cAACE,EAAA,EAAD,CAAQvB,QAjCd,SAA4BC,GAC1BA,EAAEC,iBAEF,IAAMsB,EAAO,IAAI9B,IAAMC,KACvB6B,EAAKb,YAAYD,GACjBc,EAAKf,YAAYD,GACjBgB,EAAKC,QAAQrB,MAAK,SAACsB,GACjBnD,EAAS,iBA0B8BoD,QAAQ,UAAUV,KAAK,SAA5D,0B,6BCtCO,SAASW,IACtB,MAAgCrB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KAEMvD,EAAWC,cALc,4CAO/B,4BAAAuD,EAAA,6DACQP,EAAO,IAAI9B,IAAMC,MAClBc,YAAYD,GACjBgB,EAAKb,YAAYD,GACjBc,EAAKM,SAASD,GAJhB,kBAMUL,EAAKQ,SANf,uDAQIC,MAAM,UAAY,KAAMC,SAR5B,QAUE3D,EAAS,aAVX,0DAP+B,sBA+B/B,OACE,qCACE,yCAEA,eAACqC,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,mBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEE,SAlBR,SAAwBjB,GACtBQ,EAAYR,EAAEkB,OAAOC,QAkBfH,KAAK,OACLI,YAAY,iBACZC,WAAS,OAIb,eAACV,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLI,YAAY,WACZH,SA3BR,SAAwBjB,GACtBU,EAAYV,EAAEkB,OAAOC,aA8BnB,eAACR,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,iBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACEE,SA9BR,SAAqBjB,GACnB6B,EAAS7B,EAAEkB,OAAOC,QA8BZH,KAAK,QACLI,YAAY,mBAIhB,cAACE,EAAA,EAAD,CAAQI,QAAQ,UAAU3B,QA/DC,2CA+D3B,+B,SClESmC,I,2EAAf,8BAAAJ,EAAA,6DACQK,EAAc1C,IAAM2C,OAAOC,OAAO,gBAClCC,EAAQ,IAAI7C,IAAM8C,MAAMJ,IACxBK,QAAQ,SAHhB,SAKeF,EAAMG,OALrB,oF,+BAQeC,E,gFAAf,WAAmCC,EAAWC,GAA9C,mBAAAd,EAAA,6DACQe,EAAQpD,IAAM2C,OAAOC,OAAO,SAC5BS,EAAW,IAAID,EAEfE,EAAO,IAAItD,IAAMuD,KAAKL,EAAUM,KAAMN,GAC5CG,EAASI,IAAI,OAAQH,GALvB,SAOeI,QAAQC,IACnBR,EAAaS,KAAI,SAACC,GAChB,IACMC,EAAiB,IADH9D,IAAM2C,OAAOC,OAAO,gBAExCkB,EAAeL,IAAI,OAAQI,EAAYE,MACvCD,EAAeL,IAAI,KAAMI,EAAYxD,IACrCyD,EAAeL,IAAI,OAAQzD,IAAMC,KAAKC,WACtC4D,EAAeL,IAAI,QAASJ,GAE5B,IACE,OAAOS,EAAeE,OACtB,MAAOC,GAEP,OADA1B,MAAM0B,GACCP,QAAQQ,OAAO,6BApB9B,oF,oDCRMC,EAAcC,IAAOC,IAAV,8FAMXjB,EAAQgB,IAAOE,IAAV,iGAMLC,EAAcH,IAAOC,IAAV,sHAOXG,EAAgBJ,IAAOC,IAAV,8FCdZ,SAASI,IACd,MAAsC5D,qBAAtC,mBAAOgD,EAAP,KAAoBa,EAApB,KACA,EAA8C7D,oBAAS,GAAvD,mBAAO8D,EAAP,KAAwBC,EAAxB,KAUA,OARAC,qBAAU,WACRpC,IAAkB/B,MAAK,SAACyC,GACtB,IAAM2B,EACJ3B,EAAa4B,KAAKC,MAAMD,KAAKE,SAAW9B,EAAa+B,SACvDR,EAAeI,QAEhB,IAEEjB,EAKH,qCACE,cAAC,EAAD,UACE,cAAC,EAAD,CAASsB,IAAI,GAAGC,IAAKvB,EAAYwB,IAAI,SAASA,IAAI,QAAQC,UAG5D,eAAC,EAAD,WACE,8BAAIzB,EAAYwB,IAAI,QAApB,WADF,KAC4C,IACzCV,EAAkBd,EAAYwB,IAAI,MAAQ,OAG7C,cAAC,EAAD,UACGV,EACC,mCACE,cAAC9C,EAAA,EAAD,CAAQvB,QAAS,kBAAMT,OAAOC,SAASyF,QAAO,IAA9C,oBAGF,sBAAKlG,MAAO,CAAEmG,MAAO,UAArB,UACE,cAAC3D,EAAA,EAAD,CACEvB,QAAS,kBAAMT,OAAOC,SAASyF,QAAO,IACtCtD,QAAQ,YAFV,sBADF,eAQE,cAACJ,EAAA,EAAD,CACExC,MAAO,CAAEoG,YAAa,KACtBnF,QAAS,kBAAMsE,GAAmB,IAFpC,mCA5BD,2C,eClBLc,EAActB,IAAOC,IAAV,2CCEF,SAAS3B,EAAT,GAKX,IAJFmB,EAIC,EAJDA,YACA8B,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,kBACC,4CACD,WAAoCtF,GAApC,eAAA8B,EAAA,6DACE9B,EAAEC,iBADJ,SAGqBR,IAAM8F,MAAMC,IAAI,mBAAoB,CACrDC,kBAAmBnC,EAAYE,OAJnC,OAGMkC,EAHN,OAMEL,EAAM/B,EAAaoC,GANrB,4CADC,sBASD,OACE,mCACE,sBAAK5G,MAAO,CAAE6G,QAAS,QAAvB,UACE,eAAChF,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CACEM,WAAS,EACTF,MAAOmC,EAAYE,KACnBxC,KAAK,OACLC,SAAU,SAACjB,GAAD,OAAOoF,EAAQ9B,EAAatD,EAAEkB,OAAOC,aAInD,cAACgE,EAAD,IAEA,eAACxE,EAAA,EAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,uBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,mBAAGjC,KAAK,IAAIkB,QA1BnB,4CA0BO,oBAGA,cAACY,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLG,MAAOmC,EAAYxD,GACnBmB,SAAU,SAACjB,GAAD,OAAOqF,EAAM/B,EAAatD,EAAEkB,OAAOC,aAIjD,cAACG,EAAA,EAAD,CACEsE,SAAS,KACT7F,QAAS,SAACC,GAAD,OAAOsF,EAAkBhC,IAClC5B,QAAQ,OAHV,oBCtCR,SAASmE,IACP,OAAOC,KAAKC,MAAMC,SAAS,IAAMxB,KAAKE,SAASsB,SAAS,IAAIC,UAAU,GAGjE,SAASC,IACd,MAAwC5F,mBAAS,CAC/C,CAAEpB,GAAI2G,IAAe/F,GAAI,GAAI0D,KAAM,MADrC,mBAAOZ,EAAP,KAAqBuD,EAArB,KAGA,EAAkC7F,qBAAlC,mBAAOqC,EAAP,KAAkByD,EAAlB,KACM9H,EAAWC,cALM,4CAOvB,WAA4ByB,GAA5B,SAAA8B,EAAA,6DACE9B,EAAEC,iBADJ,SAGQyC,EAAoBC,EAAWC,GAHvC,OAKEtE,EAAS,aALX,4CAPuB,sBAuBvB,SAAS8G,EAAQ9B,EAAa+C,GAC5B,IAAMC,EAAc1D,EAAaS,KAAI,SAACkD,GAAD,OACnCA,EAAErH,KAAOoE,EAAYpE,GACjBqH,EACA,CAAErH,GAAIoE,EAAYpE,GAAIsE,KAAM6C,EAAUvG,GAAIwD,EAAYxD,OAG5DqG,EAAgBG,GAGlB,SAASjB,EAAM/B,EAAa+C,GAC1B,IAAMC,EAAc1D,EAAaS,KAAI,SAACkD,GAAD,OACnCA,EAAErH,KAAOoE,EAAYpE,GACjBqH,EACA,CAAErH,GAAIoE,EAAYpE,GAAIsE,KAAMF,EAAYE,KAAM1D,GAAIuG,MAExDF,EAAgBG,GAGlB,SAAShB,EAAkBhC,GACzB6C,EAAgBvD,EAAa4D,QAAO,SAACD,GAAD,OAAOA,EAAErH,KAAOoE,EAAYpE,OAGlE,OACE,qCACGyD,GACC,qBACEiC,IAAI,GACJ9F,MAAO,CAAE2H,SAAU,SACnB5B,IAAK6B,IAAIC,gBAAgBhE,KAI7B,eAAChC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWzB,UAAU,OAA3C,UACE,cAACuB,EAAA,EAAKG,MAAN,iDACA,cAACH,EAAA,EAAKI,QAAN,CAAcE,SA5CtB,SAA0BjB,GACxBoG,EAAapG,EAAEkB,OAAO0F,MAAM,KA2CoB5F,KAAK,YAGhD4B,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEA,YAAaA,EACb8B,QAASA,EACTC,MAAOA,EACPC,kBAAmBA,GAJdhC,EAAYpE,OAQrB,cAACoC,EAAA,EAAD,CAAQvB,QArDd,WACEoG,EAAgB,GAAD,mBAAKvD,GAAL,CAAmB,CAAE1D,GAAI2G,IAAe/F,GAAI,GAAI0D,KAAM,QAoD7B9B,QAAQ,QAA5C,iCAGA,uBACA,uBAEA,cAACJ,EAAA,EAAD,CACEvB,QA/Ee,4CAgFf8G,UAAWlE,EACXjB,QAAQ,UACRV,KAAK,SAJP,0B,iDCvFO,SAAS8F,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,QAAShC,EAAc,EAAdA,IAAKiC,EAAS,EAATA,MAChD,OACE,qCACE,uBAEA,eAACC,EAAA,EAAD,CAAMnI,MAAO,CAAE2H,SAAU,SAAzB,UACE,cAAC,IAAD,CAAM3G,GAAI,SAAWiH,EAArB,SACE,cAACE,EAAA,EAAKC,IAAN,CAAUxF,QAAQ,MAAMmD,IAAKE,MAE/B,cAACoC,EAAA,EAAD,CAAW/H,UAAU,mBAArB,SACG4H,EAAM3D,KAAI,SAACrD,GAAD,OACT,cAACoH,EAAA,EAAD,UACE,4BAAIpH,EAAE8E,IAAI,WADQ9E,EAAEd,eCN3B,SAASmI,IACd,MAA0D/G,qBAA1D,mBAAOgH,EAAP,KAA8BC,EAA9B,KACA,EAAsCjH,qBAAtC,mBAAOkH,EAAP,KAAoBC,EAApB,KAwBA,GAtBAnD,qBAAU,WACR,IAAMoD,EAAyB,GACzBC,EAAe,GAErBzF,IAAkB/B,MAAK,SAACyC,GACtBA,EAAagF,SAAQ,SAACrB,GACpB,IAAMQ,EAAUR,EAAEzB,IAAI,SAAS5F,GACzB2I,EAAWtB,EAAEzB,IAAI,SAASA,IAAI,QAAQC,MAEvC2C,EAAuBX,KAC1BW,EAAuBX,GAAW,GAClCY,EAAaZ,GAAWc,GAG1BH,EAAuBX,GAASe,KAAKvB,MAGvCgB,EAAyBG,GACzBD,EAAeE,QAEhB,KAEEL,IAA0BE,EAC7B,MAAO,aAGT,IAAMO,EAAW3F,OAAO4F,KAAKV,GAG7B,OAFAS,EAASE,UAGP,qCACE,qBAAKnJ,MAAO,CAAE6G,QAAS,QAAvB,SACE,cAAC,IAAD,CAAM7F,GAAG,UAAT,SACE,cAACwB,EAAA,EAAD,CAAQxC,MAAO,CAAEoJ,WAAY,QAA7B,kCAIJ,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACGN,EAAS1E,KAAI,SAAC0D,GAAD,OACZ,cAACuB,EAAA,EAAD,UACE,cAACxB,EAAD,CACEC,QAASA,EACThC,IAAKyC,EAAYT,GACjBC,MAAOM,EAAsBP,MAJvBA,WClDL,UAA0B,qCCE1B,SAASwB,IACtB,OACE,qCACE,+BACE,uBADF,IACS,uBADT,oCAKA,qBAAK3D,IAAI,WAAWC,IAAK2D,EAAeC,MAAM,SAC9C,uBACA,uBACA,+FACA,0GAKA,uBACA,0BCfS,SAASC,KACtB,OAAKhJ,OAAKC,UAKH,cAAC,IAAD,IAHE,cAAC,IAAD,CAAUG,GAAG,WCCT,SAAS6I,KACtB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAACzI,EAAD,MAC9B,cAAC,IAAD,CAAOwI,KAAK,SAASC,QAAS,cAACN,EAAD,MAE9B,eAAC,IAAD,CAAOM,QAAS,cAACH,GAAD,IAAhB,UACE,cAAC,IAAD,CAAOE,KAAK,YAAYC,QAAS,cAAC3E,EAAD,MACjC,cAAC,IAAD,CAAO0E,KAAK,UAAUC,QAAS,cAAC3C,EAAD,MAC/B,cAAC,IAAD,CAAO0C,KAAK,YAAYC,QAAS,cAACxB,EAAD,SAGnC,cAAC,IAAD,CAAOuB,KAAK,IAAIC,QAAS,cAACN,EAAD,WCNlBO,OAXf,WACE,OACE,qBAAK1J,UAAU,MAAf,SACE,eAAC,IAAD,CAAY2J,SAAS,IAArB,UACE,cAAC1K,EAAD,IACA,cAACsK,GAAD,UCCOK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/I,MAAK,YAAkD,IAA/CgJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdxJ,IAAM+J,WACJ,2CACA,4CAGF/J,IAAMgK,UAAY,iCAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.65e871aa.chunk.js","sourcesContent":["import { Navbar, Container, Nav } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nexport function NavigationBar() {\n  const navigate = useNavigate();\n\n  function handleSignOut(e) {\n    e.preventDefault();\n    Parse.User.logOut().then(() => {\n      navigate(\"/\");\n    });\n  }\n\n  return (\n    <Navbar bg=\"light\" expand=\"sm\">\n      <Container>\n        <Navbar.Brand href=\"#/about\" style={{ lineHeight: \"1em\" }}>\n          Dansk <br />\n          in Town\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\" activeKey={window.location.pathname}>\n            {!Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/signup\">\n                  Sign Up\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/login\">\n                  LogIn\n                </Nav.Link>\n              </>\n            )}\n\n            {Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/myimages\">\n                  My Images\n                </Nav.Link>\n\n                <Nav.Link as={Link} to=\"/exercise\">\n                  Exercise\n                </Nav.Link>\n\n                <Nav.Link onClick={handleSignOut} as={Link} to=\"/\">\n                  Sign Out\n                </Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Login(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n\n  function handleLoginAttempt(e) {\n    e.preventDefault();\n\n    const user = new Parse.User();\n    user.setPassword(password);\n    user.setUsername(username);\n    user.logIn().then((loggedInUser) => {\n      navigate(\"/exercise\");\n    });\n  }\n\n  return (\n    <>\n      <h1>Login</h1>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Username\"\n            autoFocus\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button onClick={handleLoginAttempt} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  async function createAccount() {\n    const user = new Parse.User();\n    user.setUsername(username);\n    user.setPassword(password);\n    user.setEmail(email);\n    try {\n      await user.signUp();\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    }\n    navigate(\"/exercise\");\n  }\n\n  function usernameChange(e) {\n    setUsername(e.target.value);\n  }\n  function passwordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function emailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicUsrname\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          onChange={usernameChange}\n          type=\"text\"\n          placeholder=\"Enter username\"\n          autoFocus\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={passwordChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          onChange={emailChange}\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" onClick={createAccount}>\n        Create Account\n      </Button>\n    </>\n  );\n}\n","import Parse from \"parse\";\n\nasync function getTranslations() {\n  const Translation = Parse.Object.extend(\"Translation\");\n  const query = new Parse.Query(Translation);\n  query.include(\"image\");\n\n  return await query.find();\n}\n\nasync function uploadImageAndWords(imageFile, translations) {\n  const Image = Parse.Object.extend(\"Image\");\n  const newImage = new Image();\n\n  const file = new Parse.File(imageFile.name, imageFile);\n  newImage.set(\"file\", file);\n\n  return await Promise.all(\n    translations.map((translation) => {\n      const Translation = Parse.Object.extend(\"Translation\");\n      const newTranslation = new Translation();\n      newTranslation.set(\"from\", translation.from);\n      newTranslation.set(\"to\", translation.to);\n      newTranslation.set(\"user\", Parse.User.current());\n      newTranslation.set(\"image\", newImage);\n\n      try {\n        return newTranslation.save();\n      } catch (error) {\n        alert(error);\n        return Promise.reject(\"something went wrong\");\n      }\n    })\n  );\n}\n\nexport { getTranslations, uploadImageAndWords };\n","import styled from \"styled-components\";\n\nconst ImageHolder = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 320px;\n  border: 1px solid gray;\n`;\n\nconst WordsHolder = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: xx-large;\n  margin-top: 1em;\n`;\n\nconst ButtonsHolder = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n`;\n\nexport { ImageHolder, Image, WordsHolder, ButtonsHolder };\n","import { useEffect, useState } from \"react\";\n\nimport { getTranslations } from \"../db/db\";\n\nimport { Button } from \"react-bootstrap\";\nimport * as s from \"./Excercises.sc\";\n\nexport function Exercises() {\n  const [translation, setTranslation] = useState();\n  const [showingSolution, setShowingSolution] = useState(false);\n\n  useEffect(() => {\n    getTranslations().then((translations) => {\n      const randomWord =\n        translations[Math.floor(Math.random() * translations.length)];\n      setTranslation(randomWord);\n    });\n  }, []);\n\n  if (!translation) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <s.ImageHolder>\n        <s.Image alt=\"\" src={translation.get(\"image\").get(\"file\").url()} />\n      </s.ImageHolder>\n\n      <s.WordsHolder>\n        <b>{translation.get(\"from\")}&nbsp; </b> ={\" \"}\n        {showingSolution ? translation.get(\"to\") : \"?\"}\n      </s.WordsHolder>\n\n      <s.ButtonsHolder>\n        {showingSolution ? (\n          <>\n            <Button onClick={() => window.location.reload(false)}>Next</Button>\n          </>\n        ) : (\n          <div style={{ align: \"center\" }}>\n            <Button\n              onClick={() => window.location.reload(false)}\n              variant=\"secondary\"\n            >\n              Too Easy\n            </Button>\n            &nbsp;&nbsp;&nbsp;\n            <Button\n              style={{ marginRight: \"0\" }}\n              onClick={() => setShowingSolution(true)}\n            >\n              Show Solution\n            </Button>\n          </div>\n        )}\n      </s.ButtonsHolder>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst NarrowSpace = styled.div`\n  width: 1em;\n`;\n\nexport { NarrowSpace };\n","import { Form, Button } from \"react-bootstrap\";\nimport { NarrowSpace } from \"./Upload.sc\";\nimport Parse from \"parse\";\n\nexport default function Translation({\n  translation,\n  setFrom,\n  setTo,\n  deleteTranslation,\n}) {\n  async function automaticTranslation(e) {\n    e.preventDefault();\n\n    let result = await Parse.Cloud.run(\"google_translate\", {\n      word_to_translate: translation.from,\n    });\n    setTo(translation, result);\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Word</Form.Label>\n          <Form.Control\n            autoFocus\n            value={translation.from}\n            type=\"text\"\n            onChange={(e) => setFrom(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <NarrowSpace />\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicTranslation\">\n          <Form.Label>Translation</Form.Label>\n          <a href=\"/\" onClick={automaticTranslation}>\n            (auto)\n          </a>\n          <Form.Control\n            type=\"text\"\n            value={translation.to}\n            onChange={(e) => setTo(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          tabIndex=\"-1\"\n          onClick={(e) => deleteTranslation(translation)}\n          variant=\"link\"\n        >\n          x\n        </Button>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router\";\n\nimport Translation from \"./Translation\";\nimport { uploadImageAndWords } from \"../../db/db\";\n\nfunction generateUID() {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n\nexport function Upload() {\n  const [translations, setTranslations] = useState([\n    { id: generateUID(), to: \"\", from: \"\" },\n  ]);\n  const [imageFile, setImageFile] = useState();\n  const navigate = useNavigate();\n\n  async function handleUpload(e) {\n    e.preventDefault();\n\n    await uploadImageAndWords(imageFile, translations);\n\n    navigate(\"/myimages\");\n  }\n\n  function handleFileUpload(e) {\n    setImageFile(e.target.files[0]);\n  }\n\n  function addNewTranslation() {\n    setTranslations([...translations, { id: generateUID(), to: \"\", from: \"\" }]);\n  }\n\n  function setFrom(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id !== translation.id\n        ? t\n        : { id: translation.id, from: newValue, to: translation.to }\n    );\n\n    setTranslations(updatedList);\n  }\n\n  function setTo(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id !== translation.id\n        ? t\n        : { id: translation.id, from: translation.from, to: newValue }\n    );\n    setTranslations(updatedList);\n  }\n\n  function deleteTranslation(translation) {\n    setTranslations(translations.filter((t) => t.id !== translation.id));\n  }\n\n  return (\n    <>\n      {imageFile && (\n        <img\n          alt=\"\"\n          style={{ maxWidth: \"400px\" }}\n          src={URL.createObjectURL(imageFile)}\n        />\n      )}\n\n      <Form>\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Select an image from your computer</Form.Label>\n          <Form.Control onChange={handleFileUpload} type=\"file\" />\n        </Form.Group>\n\n        {translations.map((translation) => (\n          <Translation\n            key={translation.id}\n            translation={translation}\n            setFrom={setFrom}\n            setTo={setTo}\n            deleteTranslation={deleteTranslation}\n          />\n        ))}\n\n        <Button onClick={addNewTranslation} variant=\"light\">\n          Add new translation\n        </Button>\n        <br />\n        <br />\n\n        <Button\n          onClick={handleUpload}\n          disabled={!imageFile}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nexport default function ImageCard({ imageId, url, words }) {\n  return (\n    <>\n      <br />\n\n      <Card style={{ maxWidth: \"320px\" }}>\n        <Link to={\"/edit/\" + imageId}>\n          <Card.Img variant=\"top\" src={url} />\n        </Link>\n        <ListGroup className=\"list-group-flush\">\n          {words.map((e) => (\n            <ListGroupItem key={e.id}>\n              <b>{e.get(\"from\")}</b>\n              {/* = {e.get(\"to\")} */}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Card>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getTranslations } from \"../db/db.js\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport ImageCard from \"../components/ImageCard\";\n\nexport function MyImages() {\n  const [imagesAndTranslations, setImagesAndTranslations] = useState();\n  const [imageId2Url, setImageId2Url] = useState();\n\n  useEffect(() => {\n    const _imagesAndTranslations = {};\n    const _imageId2Url = {};\n\n    getTranslations().then((translations) => {\n      translations.forEach((t) => {\n        const imageId = t.get(\"image\").id;\n        const imageURL = t.get(\"image\").get(\"file\").url();\n\n        if (!_imagesAndTranslations[imageId]) {\n          _imagesAndTranslations[imageId] = [];\n          _imageId2Url[imageId] = imageURL;\n        }\n\n        _imagesAndTranslations[imageId].push(t);\n      });\n\n      setImagesAndTranslations(_imagesAndTranslations);\n      setImageId2Url(_imageId2Url);\n    });\n  }, []);\n\n  if (!imagesAndTranslations || !imageId2Url) {\n    return \"Loading...\";\n  }\n\n  const imageIds = Object.keys(imagesAndTranslations);\n  imageIds.reverse();\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Link to=\"/upload\">\n          <Button style={{ marginLeft: \"auto\" }}>Upload New Image</Button>\n        </Link>\n      </div>\n\n      <Row xs={1} md={2}>\n        {imageIds.map((imageId) => (\n          <Col key={imageId}>\n            <ImageCard\n              imageId={imageId}\n              url={imageId2Url[imageId]}\n              words={imagesAndTranslations[imageId]}\n            />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/simpsons.25ab116e.png\";","import simpsonsImage from \"../img/simpsons.png\";\n\nexport default function AboutPage() {\n  return (\n    <>\n      <h2>\n        <br /> <br />\n        Don't be like Homer Simpson ;)\n      </h2>\n\n      <img alt=\"simpsons\" src={simpsonsImage} width=\"100%\" />\n      <br />\n      <br />\n      <p>Understand the danish on the signs you see around you in town!</p>\n      <p>\n        Upload pictures, get translations, and practice till you learn new\n        words!\n      </p>\n\n      <br />\n      <br />\n    </>\n  );\n}\n","import { User } from \"parse\";\nimport { Navigate, Outlet } from \"react-router\";\n\n// based on: https://stackoverflow.com/a/69592617/1200070\n\nexport default function RequireAuth() {\n  if (!User.current()) {\n    // Redirect to the /login page,\n    return <Navigate to=\"/login\" />;\n  }\n\n  return <Outlet />;\n}\n","import { Routes, Route } from \"react-router-dom\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport { Exercises } from \"../pages/Exercises\";\nimport { Upload } from \"../pages/upload/Upload\";\nimport { MyImages } from \"../pages/MyImages\";\nimport AboutPage from \"../pages/AboutPage\";\nimport RequireAuth from \"./RequireAuth\";\n\nexport default function MyRoutes() {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/about\" element={<AboutPage />} />\n\n        <Route element={<RequireAuth />}>\n          <Route path=\"/exercise\" element={<Exercises />} />\n          <Route path=\"/upload\" element={<Upload />} />\n          <Route path=\"/myimages\" element={<MyImages />} />\n        </Route>\n\n        <Route path=\"/\" element={<AboutPage />} />\n      </Routes>\n    </>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport MyRoutes from \"./routing/Routes\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <NavigationBar />\n        <MyRoutes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./App.css\";\n\nimport Parse from \"parse\";\n\nParse.initialize(\n  \"KLxcuhhjrb2JQwegqs5jto882HLxv7scW89HDACX\",\n  \"hfYT45KTgwRr4JBWGQFaCSokz7URgAPiyoTRlqxT\"\n);\n\nParse.serverURL = \"https://parseapi.back4app.com/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}