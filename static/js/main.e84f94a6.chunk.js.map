{"version":3,"sources":["NavigationBar.js","Login.js","Signup.js","db/db.js","Exercises.js","Upload.sc.js","Translation.js","Upload.js","MyImages.sc.js","MyImages.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","className","activeKey","window","location","pathname","Parse","User","current","Link","as","to","Login","useState","username","setUsername","password","setPassword","navigate","useNavigate","Form","Group","controlId","Label","Control","type","onChange","e","target","value","placeholder","Button","onClick","preventDefault","console","log","user","logIn","then","loggedInUser","variant","Signup","Text","Check","label","getTranslations","a","Translation","Object","extend","query","Query","include","find","uploadImageAndWords","imageFile","translations","Image","newImage","file","File","name","set","Promise","all","map","translation","newTranslation","from","save","error","alert","Exercises","setTranslation","useEffect","randomWord","Math","floor","random","length","style","maxWidth","src","get","url","NarrowSpace","styled","div","setFrom","setTo","deleteTranslation","display","autoFocus","tabIndex","generateUID","Date","now","toString","substring","Upload","setTranslations","setImageFile","newValue","updatedList","t","filter","URL","createObjectURL","files","disabled","PreviewImage","img","MyImages","imagesAndTranslations","setImagesAndTranslations","imageId2Url","setImageId2Url","_imagesAndTranslations","_imageId2Url","imageId","imageURL","push","imageIds","keys","reverse","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","serverURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e84f94a6.chunk.js","sourcesContent":["import { Navbar, Container, Nav } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { Link } from \"react-router-dom\";\n\nexport function NavigationBar() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"#home\">Dansk in Town</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\" activeKey={window.location.pathname}>\n            {!Parse.User.current() && (\n              <>\n                <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\n                <Nav.Link href=\"/login\">LogIn</Nav.Link>\n              </>\n            )}\n\n            {Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/myimages\">\n                  My Images\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/upload\">\n                  Upload\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/exercises\">\n                  Exercises\n                </Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Login() {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n\n  function handleLoginAttempt(e) {\n    e.preventDefault();\n    console.log(\"prevented default\");\n\n    console.log(username);\n    console.log(password);\n\n    const user = new Parse.User();\n    user.setPassword(password);\n    user.setUsername(username);\n    user.logIn().then((loggedInUser) => {\n      console.log(loggedInUser);\n      navigate(\"/exercises\");\n    });\n  }\n\n  return (\n    <>\n      <br />\n      <br />\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Username address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Enter username\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button onClick={handleLoginAttempt} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { Form, Button } from \"react-bootstrap\";\n\nexport default function Signup() {\n  return (\n    <>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import Parse from \"parse\";\n\nasync function getTranslations() {\n  const Translation = Parse.Object.extend(\"Translation\");\n  const query = new Parse.Query(Translation);\n  query.include(\"image\");\n\n  return await query.find();\n}\n\nasync function uploadImageAndWords(imageFile, translations) {\n  const Image = Parse.Object.extend(\"Image\");\n  const newImage = new Image();\n\n  const file = new Parse.File(imageFile.name, imageFile);\n  newImage.set(\"file\", file);\n\n  return await Promise.all(\n    translations.map((translation) => {\n      const Translation = Parse.Object.extend(\"Translation\");\n      const newTranslation = new Translation();\n      newTranslation.set(\"from\", translation.from);\n      newTranslation.set(\"to\", translation.to);\n      newTranslation.set(\"user\", Parse.User.current());\n      newTranslation.set(\"image\", newImage);\n\n      try {\n        return newTranslation.save();\n      } catch (error) {\n        alert(error);\n      }\n    })\n  );\n}\n\nexport { getTranslations, uploadImageAndWords };\n","import { useEffect, useState } from \"react\";\n\nimport { getTranslations } from \"./db/db\";\n\nexport function Exercises() {\n  const [translation, setTranslation] = useState();\n\n  useEffect(() => {\n    getTranslations().then((translations) => {\n      const randomWord =\n        translations[Math.floor(Math.random() * translations.length)];\n      setTranslation(randomWord);\n    });\n  }, []);\n\n  if (!translation) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <h1>\n        <img\n          style={{ maxWidth: \"100%\" }}\n          src={translation.get(\"image\").get(\"file\").url()}\n        />\n        <b>{translation.get(\"from\")}</b> = ?{\" \"}\n      </h1>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst NarrowSpace = styled.div`\n  width: 1em;\n`;\n\nexport { NarrowSpace };\n","import { Form, Button } from \"react-bootstrap\";\nimport { NarrowSpace } from \"./Upload.sc\";\nexport default function Translation({\n  translation,\n  setFrom,\n  setTo,\n  deleteTranslation,\n}) {\n  console.log(translation.id);\n  console.log(translation.from);\n  console.log(translation.to);\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Word</Form.Label>\n          <Form.Control\n            autoFocus\n            value={translation.from}\n            type=\"text\"\n            onChange={(e) => setFrom(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <NarrowSpace />\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicTranslation\">\n          <Form.Label>Translation</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setTo(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          tabIndex=\"-1\"\n          onClick={(e) => deleteTranslation(translation)}\n          variant=\"link\"\n        >\n          x\n        </Button>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router\";\n\nimport Translation from \"./Translation\";\nimport { uploadImageAndWords } from \"./db/db\";\n\nfunction generateUID() {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n\nexport function Upload() {\n  const [translations, setTranslations] = useState([\n    { id: generateUID(), to: \"\", from: \"\" },\n  ]);\n  const [imageFile, setImageFile] = useState();\n  const navigate = useNavigate();\n\n  async function handleUpload(e) {\n    e.preventDefault();\n\n    await uploadImageAndWords(imageFile, translations);\n\n    navigate(\"/myimages\");\n  }\n\n  function handleFileUpload(e) {\n    setImageFile(e.target.files[0]);\n  }\n\n  function addNewTranslation() {\n    setTranslations([...translations, { id: generateUID(), to: \"\", from: \"\" }]);\n  }\n\n  function setFrom(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id != translation.id\n        ? t\n        : { id: translation.id, from: newValue, to: translation.to }\n    );\n\n    setTranslations(updatedList);\n  }\n\n  function setTo(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id != translation.id\n        ? t\n        : { id: translation.id, from: translation.from, to: newValue }\n    );\n    setTranslations(updatedList);\n  }\n\n  function deleteTranslation(translation) {\n    setTranslations(translations.filter((t) => t.id != translation.id));\n  }\n\n  return (\n    <>\n      {imageFile && (\n        <img\n          style={{ maxWidth: \"400px\" }}\n          src={URL.createObjectURL(imageFile)}\n        />\n      )}\n\n      <Form>\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Select an image from your computer</Form.Label>\n          <Form.Control onChange={handleFileUpload} type=\"file\" />\n        </Form.Group>\n\n        {translations.map((translation) => (\n          <Translation\n            key={translation.id}\n            translation={translation}\n            setFrom={setFrom}\n            setTo={setTo}\n            deleteTranslation={deleteTranslation}\n          />\n        ))}\n\n        <Button onClick={addNewTranslation} variant=\"light\">\n          Add new translation\n        </Button>\n        <br />\n        <br />\n\n        <Button\n          onClick={handleUpload}\n          disabled={!imageFile}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst PreviewImage = styled.img`\n  max-width: 300px;\n`;\n\nexport { PreviewImage };\n","import { useState, useEffect } from \"react\";\nimport { PreviewImage } from \"./MyImages.sc\";\nimport { getTranslations } from \"./db/db.js\";\n\nexport function MyImages() {\n  const [imagesAndTranslations, setImagesAndTranslations] = useState();\n  const [imageId2Url, setImageId2Url] = useState();\n\n  useEffect(() => {\n    const _imagesAndTranslations = {};\n    const _imageId2Url = {};\n    // dict mapping from image.id => [list of translations associated with that image]\n\n    getTranslations().then((translations) => {\n      translations.map((t) => {\n        const imageId = t.get(\"image\").id;\n        const imageURL = t.get(\"image\").get(\"file\").url();\n\n        if (!_imagesAndTranslations[imageId]) {\n          _imagesAndTranslations[imageId] = [];\n          _imageId2Url[imageId] = imageURL;\n        }\n\n        _imagesAndTranslations[imageId].push(t);\n      });\n\n      setImagesAndTranslations(_imagesAndTranslations);\n      setImageId2Url(_imageId2Url);\n    });\n  }, []);\n\n  if (!imagesAndTranslations || !imageId2Url) {\n    return \"Loading...\";\n  }\n\n  const imageIds = Object.keys(imagesAndTranslations);\n  imageIds.reverse();\n\n  return (\n    <>\n      My translations oragnized by images are\n      {imageIds.map((imageId) => (\n        <>\n          <PreviewImage src={imageId2Url[imageId]} />\n          <ul>\n            {imagesAndTranslations[imageId].map((e) => (\n              <li>\n                {e.get(\"from\")} = {e.get(\"to\")}\n              </li>\n            ))}\n          </ul>\n        </>\n      ))}\n    </>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport { Exercises } from \"./Exercises\";\nimport { Upload } from \"./Upload\";\nimport { MyImages } from \"./MyImages\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <NavigationBar />\n\n        <Routes>\n          <Route path=\"signup\" element={<Signup />} />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"exercises\" element={<Exercises />} />\n          <Route path=\"upload\" element={<Upload />} />\n          <Route path=\"myimages\" element={<MyImages />} />\n        </Routes>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./App.css\";\n\nimport Parse from \"parse\";\n\nParse.initialize(\n  \"KLxcuhhjrb2JQwegqs5jto882HLxv7scW89HDACX\",\n  \"hfYT45KTgwRr4JBWGQFaCSokz7URgAPiyoTRlqxT\"\n);\n\nParse.serverURL = \"https://parseapi.back4app.com/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}