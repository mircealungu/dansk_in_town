{"version":3,"sources":["NavigationBar.js","Login.js","Signup.js","db/db.js","Exercises.js","Upload.sc.js","Translation.js","Upload.js","ImageCard.js","MyImages.js","img/simpsons.png","LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","navigate","useNavigate","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","className","activeKey","window","location","pathname","Parse","User","current","Link","as","to","onClick","e","preventDefault","logOut","then","Login","useState","username","setUsername","password","setPassword","Form","Group","controlId","Label","Control","type","onChange","target","value","placeholder","Button","console","log","user","logIn","loggedInUser","variant","SignUp","email","setEmail","a","signUp","alert","message","variabt","getTranslations","Translation","Object","extend","query","Query","include","find","uploadImageAndWords","imageFile","translations","Image","newImage","file","File","name","set","Promise","all","map","translation","newTranslation","from","save","error","reject","Exercises","setTranslation","useEffect","randomWord","Math","floor","random","length","alt","style","maxWidth","src","get","url","NarrowSpace","styled","div","setFrom","setTo","deleteTranslation","Cloud","run","word_to_translate","result","display","autoFocus","tabIndex","generateUID","Date","now","toString","substring","Upload","setTranslations","setImageFile","newValue","updatedList","t","filter","URL","createObjectURL","files","disabled","ImageCard","imageId","words","Card","Img","ListGroup","ListGroupItem","MyImages","imagesAndTranslations","setImagesAndTranslations","imageId2Url","setImageId2Url","_imagesAndTranslations","_imageId2Url","forEach","imageURL","push","imageIds","keys","reverse","marginLeft","Row","xs","md","Col","LandingPage","simpsonsImage","width","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","serverURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ea064c1.chunk.js","sourcesContent":["import { Navbar, Container, Nav } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nexport function NavigationBar() {\n  const navigate = useNavigate();\n\n  function handleSignOut(e) {\n    e.preventDefault();\n    Parse.User.logOut().then(() => {\n      navigate(\"/\");\n    });\n  }\n\n  return (\n    <Navbar bg=\"light\" expand=\"sm\">\n      <Container>\n        <Navbar.Brand href=\"#home\">Dansk in Town</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\" activeKey={window.location.pathname}>\n            {!Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/signup\">\n                  Sign Up\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/login\">\n                  LogIn\n                </Nav.Link>\n              </>\n            )}\n\n            {Parse.User.current() && (\n              <>\n                <Nav.Link as={Link} to=\"/myimages\">\n                  My Images\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/upload\">\n                  Upload\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/exercises\">\n                  Exercises\n                </Nav.Link>\n\n                <Nav.Link onClick={handleSignOut} as={Link} to=\"/\">\n                  Sign Out\n                </Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Login() {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n\n  function handleLoginAttempt(e) {\n    e.preventDefault();\n    console.log(\"prevented default\");\n\n    console.log(username);\n    console.log(password);\n\n    const user = new Parse.User();\n    user.setPassword(password);\n    user.setUsername(username);\n    user.logIn().then((loggedInUser) => {\n      console.log(loggedInUser);\n      navigate(\"/exercises\");\n    });\n  }\n\n  return (\n    <>\n      <br />\n      <br />\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Username\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button onClick={handleLoginAttempt} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Parse from \"parse\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  async function createAccount() {\n    const user = new Parse.User();\n    user.setUsername(username);\n    user.setPassword(password);\n    user.setEmail(email);\n    try {\n      await user.signUp();\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    }\n    navigate(\"/exercises\");\n  }\n\n  function usernameChange(e) {\n    setUsername(e.target.value);\n  }\n  function passwordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function emailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n      <br />\n      <br />\n      <br />\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicUsrname\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          onChange={usernameChange}\n          type=\"text\"\n          placeholder=\"Enter username\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={passwordChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          onChange={emailChange}\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n      </Form.Group>\n\n      <Button variabt=\"primary\" onClick={createAccount}>\n        Create Account\n      </Button>\n    </>\n  );\n}\n","import Parse from \"parse\";\n\nasync function getTranslations() {\n  const Translation = Parse.Object.extend(\"Translation\");\n  const query = new Parse.Query(Translation);\n  query.include(\"image\");\n\n  return await query.find();\n}\n\nasync function uploadImageAndWords(imageFile, translations) {\n  const Image = Parse.Object.extend(\"Image\");\n  const newImage = new Image();\n\n  const file = new Parse.File(imageFile.name, imageFile);\n  newImage.set(\"file\", file);\n\n  return await Promise.all(\n    translations.map((translation) => {\n      const Translation = Parse.Object.extend(\"Translation\");\n      const newTranslation = new Translation();\n      newTranslation.set(\"from\", translation.from);\n      newTranslation.set(\"to\", translation.to);\n      newTranslation.set(\"user\", Parse.User.current());\n      newTranslation.set(\"image\", newImage);\n\n      try {\n        return newTranslation.save();\n      } catch (error) {\n        alert(error);\n        return Promise.reject(\"something went wrong\");\n      }\n    })\n  );\n}\n\nexport { getTranslations, uploadImageAndWords };\n","import { useEffect, useState } from \"react\";\n\nimport { getTranslations } from \"./db/db\";\n\nexport function Exercises() {\n  const [translation, setTranslation] = useState();\n\n  useEffect(() => {\n    getTranslations().then((translations) => {\n      const randomWord =\n        translations[Math.floor(Math.random() * translations.length)];\n      setTranslation(randomWord);\n    });\n  }, []);\n\n  if (!translation) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <h1>\n        <img\n          alt=\"\"\n          style={{ maxWidth: \"100%\" }}\n          src={translation.get(\"image\").get(\"file\").url()}\n        />\n        <b>{translation.get(\"from\")}</b> = ?{\" \"}\n      </h1>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst NarrowSpace = styled.div`\n  width: 1em;\n`;\n\nexport { NarrowSpace };\n","import { Form, Button } from \"react-bootstrap\";\nimport { NarrowSpace } from \"./Upload.sc\";\nimport Parse from \"parse\";\n\nexport default function Translation({\n  translation,\n  setFrom,\n  setTo,\n  deleteTranslation,\n}) {\n  async function automaticTranslation(e) {\n    e.preventDefault();\n\n    let result = await Parse.Cloud.run(\"google_translate\", {\n      word_to_translate: translation.from,\n    });\n    setTo(translation, result);\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n          <Form.Label>Word</Form.Label>\n          <Form.Control\n            autoFocus\n            value={translation.from}\n            type=\"text\"\n            onChange={(e) => setFrom(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <NarrowSpace />\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicTranslation\">\n          <Form.Label>Translation</Form.Label>\n          <a href=\"/\" onClick={automaticTranslation}>\n            (auto)\n          </a>\n          <Form.Control\n            type=\"text\"\n            value={translation.to}\n            onChange={(e) => setTo(translation, e.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          tabIndex=\"-1\"\n          onClick={(e) => deleteTranslation(translation)}\n          variant=\"link\"\n        >\n          x\n        </Button>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router\";\n\nimport Translation from \"./Translation\";\nimport { uploadImageAndWords } from \"./db/db\";\n\nfunction generateUID() {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n\nexport function Upload() {\n  const [translations, setTranslations] = useState([\n    { id: generateUID(), to: \"\", from: \"\" },\n  ]);\n  const [imageFile, setImageFile] = useState();\n  const navigate = useNavigate();\n\n  async function handleUpload(e) {\n    e.preventDefault();\n\n    await uploadImageAndWords(imageFile, translations);\n\n    navigate(\"/myimages\");\n  }\n\n  function handleFileUpload(e) {\n    setImageFile(e.target.files[0]);\n  }\n\n  function addNewTranslation() {\n    setTranslations([...translations, { id: generateUID(), to: \"\", from: \"\" }]);\n  }\n\n  function setFrom(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id !== translation.id\n        ? t\n        : { id: translation.id, from: newValue, to: translation.to }\n    );\n\n    setTranslations(updatedList);\n  }\n\n  function setTo(translation, newValue) {\n    const updatedList = translations.map((t) =>\n      t.id !== translation.id\n        ? t\n        : { id: translation.id, from: translation.from, to: newValue }\n    );\n    setTranslations(updatedList);\n  }\n\n  function deleteTranslation(translation) {\n    setTranslations(translations.filter((t) => t.id !== translation.id));\n  }\n\n  return (\n    <>\n      {imageFile && (\n        <img\n          alt=\"\"\n          style={{ maxWidth: \"400px\" }}\n          src={URL.createObjectURL(imageFile)}\n        />\n      )}\n\n      <Form>\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Select an image from your computer</Form.Label>\n          <Form.Control onChange={handleFileUpload} type=\"file\" />\n        </Form.Group>\n\n        {translations.map((translation) => (\n          <Translation\n            key={translation.id}\n            translation={translation}\n            setFrom={setFrom}\n            setTo={setTo}\n            deleteTranslation={deleteTranslation}\n          />\n        ))}\n\n        <Button onClick={addNewTranslation} variant=\"light\">\n          Add new translation\n        </Button>\n        <br />\n        <br />\n\n        <Button\n          onClick={handleUpload}\n          disabled={!imageFile}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nexport default function ImageCard({ imageId, url, words }) {\n  return (\n    <>\n      <br />\n\n      <Card style={{ maxWidth: \"320px\" }}>\n        <Link to={\"/edit/\" + imageId}>\n          <Card.Img variant=\"top\" src={url} />\n        </Link>\n        <ListGroup className=\"list-group-flush\">\n          {words.map((e) => (\n            <ListGroupItem key={e.id}>\n              <b>{e.get(\"from\")}</b>\n              {/* = {e.get(\"to\")} */}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Card>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getTranslations } from \"./db/db.js\";\nimport { Parse } from \"parse\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport ImageCard from \"./ImageCard\";\n\nexport function MyImages() {\n  const [imagesAndTranslations, setImagesAndTranslations] = useState();\n  const [imageId2Url, setImageId2Url] = useState();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const _imagesAndTranslations = {};\n    const _imageId2Url = {};\n\n    getTranslations().then((translations) => {\n      translations.forEach((t) => {\n        const imageId = t.get(\"image\").id;\n        const imageURL = t.get(\"image\").get(\"file\").url();\n\n        if (!_imagesAndTranslations[imageId]) {\n          _imagesAndTranslations[imageId] = [];\n          _imageId2Url[imageId] = imageURL;\n        }\n\n        _imagesAndTranslations[imageId].push(t);\n      });\n\n      setImagesAndTranslations(_imagesAndTranslations);\n      setImageId2Url(_imageId2Url);\n    });\n  }, []);\n\n  if (!Parse.User.current()) {\n    navigate(\"/login\");\n  }\n\n  if (!imagesAndTranslations || !imageId2Url) {\n    return \"Loading...\";\n  }\n\n  const imageIds = Object.keys(imagesAndTranslations);\n  imageIds.reverse();\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <Link to=\"/upload\">\n          <Button style={{ marginLeft: \"auto\" }}>Upload New Image</Button>\n        </Link>\n      </div>\n\n      <Row xs={1} md={2}>\n        {imageIds.map((imageId) => (\n          <Col key={imageId}>\n            <ImageCard\n              imageId={imageId}\n              url={imageId2Url[imageId]}\n              words={imagesAndTranslations[imageId]}\n            />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/simpsons.25ab116e.png\";","import Parse from \"parse\";\nimport { useNavigate } from \"react-router-dom\";\nimport simpsonsImage from \"./img/simpsons.png\";\n\nexport default function LandingPage() {\n  const navigate = useNavigate();\n\n  if (Parse.User.current()) {\n    navigate(\"/exercises\");\n  }\n\n  return (\n    <>\n      <h2>\n        <br /> <br />\n        Don't be like Homer Simpson ;)\n      </h2>\n\n      <img alt=\"simpsons\" src={simpsonsImage} width=\"100%\" />\n      <br />\n      <br />\n      <p>Understand the danish on the signs you see around you in town!</p>\n      <p>\n        Upload pictures, get translations, and practice till you learn new\n        words!\n      </p>\n\n      <br />\n      <br />\n    </>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport { Exercises } from \"./Exercises\";\nimport { Upload } from \"./Upload\";\nimport { MyImages } from \"./MyImages\";\nimport LandingPage from \"./LandingPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <NavigationBar />\n\n        <Routes>\n          <Route path=\"signup\" element={<Signup />} />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"exercises\" element={<Exercises />} />\n          <Route path=\"upload\" element={<Upload />} />\n          <Route path=\"myimages\" element={<MyImages />} />\n          <Route path=\"/\" element={<LandingPage />} />\n        </Routes>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./App.css\";\n\nimport Parse from \"parse\";\n\nParse.initialize(\n  \"KLxcuhhjrb2JQwegqs5jto882HLxv7scW89HDACX\",\n  \"hfYT45KTgwRr4JBWGQFaCSokz7URgAPiyoTRlqxT\"\n);\n\nParse.serverURL = \"https://parseapi.back4app.com/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}